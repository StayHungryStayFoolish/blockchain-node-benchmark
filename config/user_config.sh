#!/bin/bash
# =====================================================================
# Blockchain Node Benchmark Framework - Áî®Êà∑ÈÖçÁΩÆÂ±Ç
# =====================================================================
# ÁõÆÊ†áÁî®Êà∑: ÊâÄÊúâ‰ΩøÁî®Ê°ÜÊû∂ÁöÑÁî®Êà∑
# ÈÖçÁΩÆÂÜÖÂÆπ: RPCËøûÊé•„ÄÅÊµãËØïÂèÇÊï∞„ÄÅEBSËÆæÂ§á„ÄÅÁõëÊéßÂü∫Á°ÄÈÖçÁΩÆ
# ‰øÆÊîπÈ¢ëÁéá: ÁªèÂ∏∏‰øÆÊîπ
# =====================================================================

# ----- EBS ËÆæÂ§áÈÖçÁΩÆ -----
# DATA ËÆæÂ§á (LEDGER Êï∞ÊçÆÂ≠òÂÇ®)
LEDGER_DEVICE="nvme1n1"
# ACCOUNTS ËÆæÂ§á (ÂèØÈÄâÔºåÁî®‰∫éË¥¶Êà∑Êï∞ÊçÆÂ≠òÂÇ®)
ACCOUNTS_DEVICE="nvme2n1"

# Data volume configuration
DATA_VOL_TYPE="io2"                    # Options: "gp3" | "io2" | "instance-store"
DATA_VOL_SIZE="2000"                   # Current required data size to keep both snapshot archive and unarchived version of it
DATA_VOL_MAX_IOPS="20000"              # Max IOPS for EBS volumes (REQUIRED for "instance-store")
DATA_VOL_MAX_THROUGHPUT="700"          # Max throughput in MiB/s (REQUIRED for "instance-store", auto-calculated for "io2")

# Accounts volume configuration (optional)
ACCOUNTS_VOL_TYPE="io2"                # Options: "gp3" | "io2" | "instance-store"
ACCOUNTS_VOL_SIZE="500"                # Current required data size to keep both snapshot archive and unarchived version of it
ACCOUNTS_VOL_MAX_IOPS="20000"          # Max IOPS for EBS volumes (REQUIRED for "instance-store")
ACCOUNTS_VOL_MAX_THROUGHPUT="700"      # Max throughput in MiB/s (REQUIRED for "instance-store", auto-calculated for "io2")

# ----- ÁΩëÁªúÁõëÊéßÈÖçÁΩÆ -----
# EC2ÂÆû‰æãÁΩëÁªúÂ∏¶ÂÆΩÈÖçÁΩÆ (Âçï‰Ωç: Gbps) - Áî®Êà∑ÂøÖÈ°ªÊ†πÊçÆEC2ÂÆû‰æãÁ±ªÂûãËÆæÁΩÆ
NETWORK_MAX_BANDWIDTH_GBPS=25       # ÁΩëÁªúÊúÄÂ§ßÂ∏¶ÂÆΩ (Âçï‰Ωç: Gbps) - Áî®Êà∑ÂøÖÈ°ªÊ†πÊçÆEC2ÂÆû‰æãÁ±ªÂûãËÆæÁΩÆ

# ENAÁΩëÁªúÈôêÂà∂ÁõëÊéßÈÖçÁΩÆ
ENA_MONITOR_ENABLED=true

# ----- ÁõëÊéßÈÖçÁΩÆ -----
# Áªü‰∏ÄÁõëÊéßÈó¥Èöî (Áßí) - ÊâÄÊúâÁõëÊéß‰ªªÂä°‰ΩøÁî®Áõ∏ÂêåÈó¥Èöî
MONITOR_INTERVAL=5              # Áªü‰∏ÄÁõëÊéßÈó¥ÈöîÔºåÈÄÇÁî®‰∫éÁ≥ªÁªüËµÑÊ∫ê„ÄÅÂå∫ÂùóÈìæËäÇÁÇπÂíåÁõëÊéßÂºÄÈîÄÁªüËÆ°
EBS_MONITOR_INTERVAL=1          # EBS ÂçïÁã¨ÁõëÊéß

# ----- QPS Âü∫ÂáÜÊµãËØïÈÖçÁΩÆ -----
# Âø´ÈÄüÂü∫ÂáÜÊµãËØïÊ®°Âºè (È™åËØÅÂü∫Êú¨QPSËÉΩÂäõ)
QUICK_INITIAL_QPS=1000
QUICK_MAX_QPS=1500
QUICK_QPS_STEP=500
QUICK_DURATION=60   # ÊØè‰∏™QPSÁ∫ßÂà´ÊµãËØï1ÂàÜÈíü (ÈÅøÂÖçÈïøÊó∂Èó¥ÊµãËØïÂØºËá¥ÁöÑËµÑÊ∫êÈóÆÈ¢ò)

# Ê†áÂáÜÂü∫ÂáÜÊµãËØïÊ®°Âºè (Ê†áÂáÜÊÄßËÉΩÊµãËØï)
STANDARD_INITIAL_QPS=1000
STANDARD_MAX_QPS=5000
STANDARD_QPS_STEP=500
STANDARD_DURATION=600

# Ê∑±Â∫¶Âü∫ÂáÜÊµãËØïÊ®°Âºè (Ëá™Âä®ÂØªÊâæÁ≥ªÁªüÁì∂È¢à)
INTENSIVE_INITIAL_QPS=1000
INTENSIVE_MAX_QPS=999999      # Êó†ÂÆûÈôÖ‰∏äÈôêÔºåÁõ¥Âà∞Ê£ÄÊµãÂà∞Áì∂È¢à
INTENSIVE_QPS_STEP=250
INTENSIVE_DURATION=600
INTENSIVE_AUTO_STOP=true      # ÂêØÁî®Ëá™Âä®Áì∂È¢àÊ£ÄÊµãÂÅúÊ≠¢

# Âü∫ÂáÜÊµãËØïÈó¥ÈöîÈÖçÁΩÆ
QPS_COOLDOWN=30      # QPSÁ∫ßÂà´Èó¥ÁöÑÂÜ∑Âç¥Êó∂Èó¥ (Áßí)
QPS_WARMUP_DURATION=60  # È¢ÑÁÉ≠Êó∂Èó¥ (Áßí)

# ----- EBS io2 Á±ªÂûãËá™Âä®ÂêûÂêêÈáèËÆ°ÁÆó -----
echo "üîß Ê£ÄÊü• EBS io2 Á±ªÂûãÈÖçÁΩÆ..." >&2

# Âä†ËΩΩ EBS ËΩ¨Êç¢Âô®ÔºàÂ¶ÇÊûúÈúÄË¶ÅÔºâ
if [[ "$DATA_VOL_TYPE" == "io2" || "$ACCOUNTS_VOL_TYPE" == "io2" ]]; then
    if [[ -f "${CONFIG_DIR}/../utils/ebs_converter.sh" ]]; then
        source "${CONFIG_DIR}/../utils/ebs_converter.sh"
        echo "‚úÖ EBSËΩ¨Êç¢Âô®Âä†ËΩΩÂÆåÊàê" >&2
    else
        echo "‚ùå ÈîôËØØ: ebs_converter.sh ‰∏çÂ≠òÂú®ÔºåÊó†Ê≥ïÂ§ÑÁêÜ io2 Á±ªÂûã" >&2
        echo "   Ë∑ØÂæÑ: ${CONFIG_DIR}/../utils/ebs_converter.sh" >&2
        exit 1
    fi
fi

# Â§ÑÁêÜ DATA Âç∑ÁöÑ io2 Ëá™Âä®ËÆ°ÁÆó
if [[ "$DATA_VOL_TYPE" == "io2" && -n "$DATA_VOL_MAX_IOPS" ]]; then
    local original_throughput="$DATA_VOL_MAX_THROUGHPUT"
    local auto_throughput

    if auto_throughput=$(calculate_io2_throughput "$DATA_VOL_MAX_IOPS" 2>/dev/null); then
        DATA_VOL_MAX_THROUGHPUT="$auto_throughput"
        echo "‚ÑπÔ∏è  DATAÂç∑ io2 Ëá™Âä®ËÆ°ÁÆó: $original_throughput ‚Üí $auto_throughput MiB/s (Âü∫‰∫é $DATA_VOL_MAX_IOPS IOPS)" >&2
    else
        echo "‚ùå ÈîôËØØ: DATAÂç∑ io2 ÂêûÂêêÈáèËÆ°ÁÆóÂ§±Ë¥•" >&2
        exit 1
    fi
fi

# Â§ÑÁêÜ ACCOUNTS Âç∑ÁöÑ io2 Ëá™Âä®ËÆ°ÁÆó
if [[ "$ACCOUNTS_VOL_TYPE" == "io2" && -n "$ACCOUNTS_VOL_MAX_IOPS" && -n "$ACCOUNTS_DEVICE" ]]; then
    local original_throughput="$ACCOUNTS_VOL_MAX_THROUGHPUT"
    local auto_throughput

    if auto_throughput=$(calculate_io2_throughput "$ACCOUNTS_VOL_MAX_IOPS" 2>/dev/null); then
        ACCOUNTS_VOL_MAX_THROUGHPUT="$auto_throughput"
        echo "‚ÑπÔ∏è  ACCOUNTSÂç∑ io2 Ëá™Âä®ËÆ°ÁÆó: $original_throughput ‚Üí $auto_throughput MiB/s (Âü∫‰∫é $ACCOUNTS_VOL_MAX_IOPS IOPS)" >&2
    else
        echo "‚ùå ÈîôËØØ: ACCOUNTSÂç∑ io2 ÂêûÂêêÈáèËÆ°ÁÆóÂ§±Ë¥•" >&2
        exit 1
    fi
fi

# ÂØºÂá∫Áî®Êà∑ÈÖçÁΩÆÂèòÈáè
export LEDGER_DEVICE ACCOUNTS_DEVICE
export DATA_VOL_TYPE DATA_VOL_SIZE DATA_VOL_MAX_IOPS DATA_VOL_MAX_THROUGHPUT
export ACCOUNTS_VOL_TYPE ACCOUNTS_VOL_SIZE ACCOUNTS_VOL_MAX_IOPS ACCOUNTS_VOL_MAX_THROUGHPUT
export NETWORK_MAX_BANDWIDTH_GBPS ENA_MONITOR_ENABLED MONITOR_INTERVAL EBS_MONITOR_INTERVAL
export QUICK_INITIAL_QPS QUICK_MAX_QPS QUICK_QPS_STEP QUICK_DURATION
export STANDARD_INITIAL_QPS STANDARD_MAX_QPS STANDARD_QPS_STEP STANDARD_DURATION
export INTENSIVE_INITIAL_QPS INTENSIVE_MAX_QPS INTENSIVE_QPS_STEP INTENSIVE_DURATION INTENSIVE_AUTO_STOP
export QPS_COOLDOWN QPS_WARMUP_DURATION 